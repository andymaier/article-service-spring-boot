/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.systems62.codegen.controllers;

import com.systems62.codegen.model.Artikel;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-12-17T19:42:37.231626+01:00[Europe/Berlin]")

@Validated
@Api(value = "artikel", description = "the artikel API")
public interface ArtikelApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /artikel/{aid} : Gebe einen Artikel zurück
     * Liefert einen Artikel aufgrund der aid zurück
     *
     * @param aid  (required)
     * @return OK (status code 200)
     */
    @ApiOperation(value = "Gebe einen Artikel zurück", nickname = "artikelAidGet", notes = "Liefert einen Artikel aufgrund der aid zurück", response = Artikel.class, tags={ "Shop", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Artikel.class) })
    @RequestMapping(value = "/artikel/{aid}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Artikel> artikelAidGet(@ApiParam(value = "",required=true) @PathVariable("aid") String aid) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"preis\" : 3.99, \"name\" : \"HansWurst\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /artikel/ : Gebe alle Artikel
     * Liefert alle Artikel zurück
     *
     * @return OK (status code 200)
     */
    @ApiOperation(value = "Gebe alle Artikel", nickname = "artikelGet", notes = "Liefert alle Artikel zurück", response = Artikel.class, responseContainer = "List", tags={ "Shop", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Artikel.class, responseContainer = "List") })
    @RequestMapping(value = "/artikel/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Artikel>> artikelGet() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"preis\" : 3.99, \"name\" : \"HansWurst\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /artikel/ : Lege einen Artikel an
     * Mit diesem Endpunkt wird ein Artikel angelegt
     *
     * @param artikel  (optional)
     * @return Created (status code 201)
     */
    @ApiOperation(value = "Lege einen Artikel an", nickname = "artikelPost", notes = "Mit diesem Endpunkt wird ein Artikel angelegt", response = Artikel.class, tags={ "Shop", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created", response = Artikel.class) })
    @RequestMapping(value = "/artikel/",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Artikel> artikelPost(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) Artikel artikel) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"preis\" : 3.99, \"name\" : \"HansWurst\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
